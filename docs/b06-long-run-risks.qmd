---
title:  "Long-Run Risk"
author: <br><br><br><br><span style="font-family:perpetua; font-variant:small-caps; color:#606060;">Kerry Back</span><br><br><img src="RiceBusiness-transparent-logo-sm.png"  height=80>
output-dir: docs
execute:
  echo: false
  jupyter: python3
 
format: 
  revealjs:
    highlight-style: monokai
    code-fold: true
    slide-number: true
    preview-links: true
    scrollable: true
    self-contained: true
    controls: true
    transition: fade
    theme: [solarized, 721.scss]
    incremental: true
---

## Is there risk in the long run?

:::: {.columns}

::: {.column width=40}


<img src="images/dice.jpg" height=400>
:::

::: {.column width=60}

- A common belief is that the law of averages will rule in the long run, eliminating risk. 
- It's true that the average outcome from a gamble should not be risky in the long run.

:::



::::

. . .



But the gain or loss from gambling is
average gain per gamble $\times$ number of gambles.

## Betting on the stock market <a href="http://learn-investments.rice-business.org/risk/best-worst"><img src="images/Rice_Owl.jpg" style="width:.65in;" align="right"></a>

- Based on history, the bet is definitely in our favor.  

- Play for a long time $\Rightarrow$ almost certainly come out ahead.

- But how far ahead is quite uncertain.

    - In [worst 20-year period]{style="color:tomato; font-weight:bold"} in U.S. stock market since 1926, [\$1 $\rightarrow$ \$1.73]{style="color:tomato; font-weight:bold"}, a geometric average return of 2.8% per year (1929-1948).
    - In [best 20-year period]{style="color:tomato; font-weight:bold"} since 1926, [\$1 $\rightarrow$ \$24.65]{style="color:tomato; font-weight:bold"}, a geometric average return of 17.4% per year (1980-1999).

#

<p align=center> 

</p>


## Simulate returns

- Mean and std dev of U.S. market return 1970-2021 was 12.5% and 17.4%.
- Simulate 20-year compounded returns.

. . .

```{.p code-line-numbers="1-5|7|8"}
import numpy as np

mn = 0.125
sd = 0.174
nyears = 20

r = np.random.normal(loc=mn, scale=sd, size=nyears)
comp_ret = np.prod(1+r)
```

## Repeat and evaluate the distribution

. . .


```{.p code-line-numbers="1|3-4|5"}
nsims = 1000

r = np.random.normal(loc=mn, scale=sd, size=nyears*nsims)
r = r.reshape((nyears, nsims))
comp_ret = np.prod(1+r, axis=0)
```

. . .


:::: columns

::: column 

```{python}

import numpy as np
import plotly.graph_objects as go

mn = 0.125
sd = 0.174
nsims = 1000

r = np.random.normal(loc=mn, scale=sd, size=30*nsims)
r = r.reshape((30,1000))
comp_ret = np.prod(1+r, axis=0)

trace = go.Box(
  y=comp_ret,
  name="",
  hovertemplate="%{text}<extra></extra>",
)
fig = go.Figure(trace)
fig.update_layout(
    template="plotly_dark",
    yaxis_title="Accumulation from $1",
    xaxis_title="",
    yaxis_title_font_size=20,
    xaxis_title_font_size=20,
    font_size=16,
    yaxis_tickprefix="$",
    yaxis_tickformat=".0f",
    xaxis_tickformat="",
    height=360,
    width=500
)

fig.show()
```

:::

::: column


```{python}

import pandas as pd
comp_ret = pd.Series(comp_ret)
table = comp_ret.describe(percentiles=[0.1,0.25,0.5,0.75,0.9])
print(table.iloc[1:].round(2))
```
:::

::::


## Retirement Planning Simulation <a href="https://learn-investments.rice-business.org/borrowing-saving/retirement-planning-sim"><img src="images/Rice_Owl.jpg"  style="width:.65in;" align="right"></a>

. . .

<br>

:::: {.columns}

::: {.column width=50}

Uncertainty about long-run returns $\Rightarrow$ uncertainty about retirement plans.

<br>


- Revisit the retirement plan
- Generate random returns and simulate many lifetimes.

:::

::: {.column width=50}
<img src="images/retirement-concept-2021-08-28-19-21-53-utc.jpg" height=480>
:::
::::
